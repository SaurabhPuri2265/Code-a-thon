Given an unsorted integer array, find the smallest missing positive integer.

Example 1:

Input: [1,2,0]
Output: 3
Example 2:

Input: [3,4,-1,1]
Output: 2
Example 3:

Input: [7,8,9,11,12]
Output: 1

//NLOGN time O(1) space
----------------------------------------------------------
class Solution {
    public int firstMissingPositive(int[] nums) {
        
        Arrays.sort(nums);
        
        int oneIdx=-1;
        
        for(int i=0;i<nums.length;i++)
            if(nums[i]==1)
                oneIdx=i;
        
        if(oneIdx==-1)
            return 1;
        
        
        boolean flag=true;
        
        for(int i=oneIdx;i<nums.length-1;i++)
        {
            if(nums[i+1]==nums[i] || nums[i+1]==nums[i]+1)
                continue;
            else
                return nums[i]+1;
        }
        
        return nums[nums.length-1]+1;
    }
}

---------------------------------------------------------------------------------
O(N) time, O(N) Space

class Solution {
    public int firstMissingPositive(int[] nums) {
        
       HashSet<Integer> set=new HashSet<>();
       
        if(nums.length==0)
            return 1;
        
        for(int i:nums)
            set.add(i);
        
        for(int i=1;i<=nums.length+1;i++)
        {
            if(!set.contains(i))
                return i;
        }
            
        return -1;
    }
}

------------------------------------------------------------------------------------

