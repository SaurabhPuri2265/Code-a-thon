Given an array of integers A sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.

 

Example 1:

Input: [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Example 2:

Input: [-7,-3,2,3,11]
Output: [4,9,9,49,121]

----------------------------------------------------------------------------------------------------------------------

//Merge Sort approach expand from 0

class Solution {
    public int[] sortedSquares(int[] A) {
        
        int i=0;
        
        while(i<A.length && A[i]<0)
            i++;
        
        i=i-1;
            
        
        int j=i+1;
        
        int[] res=new int[A.length];
        int idx=0;
        
        while(i>=0 && j<A.length)
        {
            if(A[i]*A[i] < A[j]*A[j])
            {
                res[idx++]=A[i]*A[i];
                i--;
            }
            else
            {
                res[idx++]=A[j]*A[j];
                j++;
            }
        }
        while(i>=0)
        {
            res[idx++]=A[i]*A[i];
            i--;
        }
        
        
        while(j<A.length)
        {
            res[idx++]=A[j]*A[j];
            j++;
        }
        
        
        return res;
    }
}