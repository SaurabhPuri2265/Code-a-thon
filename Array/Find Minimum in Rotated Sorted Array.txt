Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

You may assume no duplicate exists in the array.

Example 1:

Input: [3,4,5,1,2] 
Output: 1
Example 2:

Input: [4,5,6,7,0,1,2]
Output: 0

---------------------------------------------------------------------------------------------------

class Solution {
    public int findMin(int[] nums) {
        
        return getMin(nums,0,nums.length-1);
    }
    
    public int getMin(int[] nums,int i,int j){
        
        if(nums[i]<nums[j])return nums[i];
        
        if(i==j)
            return nums[i];
        
        int mid=i+(j-i)/2;
        //System.out.println(mid);
        
        //if(mid!=0 && nums[mid]>nums[mid-1] && nums[mid]<nums[mid+1])
          //  return nums[mid];
        if( mid>i && nums[mid-1]>nums[mid] )
            return nums[mid];
        else if(mid<j && nums[mid+1]<nums[mid] )
            return nums[mid+1];
        if(nums[mid]>nums[i])
            return getMin(nums,mid+1,j);
        return getMin(nums,i,mid-1);
    }
}