Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
       
         List<List<Integer>> parent=new ArrayList<>();
        
        if(nums.length<=2)return parent;
        
        Arrays.sort(nums);
        
        int cs=nums[0]+nums[1]+nums[2];
        
        for(int i=0;i<nums.length-2;i++)
        {
            if(i>0&&nums[i]==nums[i-1])
			continue;
            int p1=i+1;
            int p2=nums.length-1;
            int sum=0-nums[i];
            while(p1<p2){
                int target=nums[p1]+nums[p2];
                if(sum==target)
                {
                  List<Integer> child=new ArrayList<>(3);
                  child.add(nums[i]);  
                   child.add(nums[p1]);
                    child.add(nums[p2]);
                    parent.add(child);
                   while(p1<p2 && nums[p1]==nums[p1+1])
                     p1++;
                   p1++;
                   while(p2>p1 && nums[p2]==nums[p2-1])
                     p2--; 
                   p2--;
                   //continue; 
                }
                else if(sum<target)
                    p2--;
                else
                    p1++;
            }
        
        }
        
        return parent;
        
        
    }
}