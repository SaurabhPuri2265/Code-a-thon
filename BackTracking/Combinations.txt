Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Example:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

class Solution {
    
    List<List<Integer>> parent=new ArrayList<>();
    
    public List<List<Integer>> combine(int n, int k) {
        
         
        int[] arr=new int[n];
        
        for(int i=0;i<arr.length;i++)
            arr[i]=i+1;
            
        
        Helper(arr,k,0,new ArrayList<Integer>());
        
        return parent;
    }
    
    public void Helper(int[] arr,int k,int idx,List<Integer> child){
        //if(idx>=arr.length) return;
        
        if(k<=0){
            if(k==0)
                parent.add(new ArrayList<Integer>(child) );
            return;
        }
              
       for(int i=idx;i<arr.length;i++){           
           child.add(arr[i]);
           Helper(arr,k-1,i+1,child);
           child.remove(child.size()-1);
           
       }
    }
}