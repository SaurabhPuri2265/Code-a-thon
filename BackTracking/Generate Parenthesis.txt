Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]


class Solution {
    List<String> list=new ArrayList<>();
    public List<String> generateParenthesis(int n) {
        
        Helper(list,"",0,0,n);
        
        return list;
        
    }
    
    public void Helper(List<String> list,String curr,int open ,int close,int max){
        if(curr.length() == 2*max){
            list.add(curr);
            return;
        }
        
        if(close<open)
            Helper(list,curr+")",open,close+1,max);
        if(open<max)
            Helper(list,curr+"(",open+1,close,max);
    }
}