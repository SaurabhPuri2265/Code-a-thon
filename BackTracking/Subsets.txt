Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

-----------------------------------------------------------------------------------------------

class Solution {
    
    List<List<Integer>> parent=new ArrayList<>();
    public List<List<Integer>> subsets(int[] nums) {
        
        int n=nums.length;
        
        getSubsets(nums,0,new ArrayList<Integer>());
        
        return parent;
        
    }
    
    
    public void getSubsets(int[] nums,int idx,List<Integer> list){
        if(idx>nums.length)return;
        
        if(!parent.contains(list))
            parent.add(new ArrayList<>(list));
        
        for(int i=idx;i<nums.length;i++){
            list.add(nums[i]);
            getSubsets(nums,i+1,list);
            list.remove(list.size()-1);
        }
    }
}