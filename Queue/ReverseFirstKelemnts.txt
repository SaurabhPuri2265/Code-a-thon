import java.util.*;

public class Reversekqueue {

   static Queue<Integer> queue;
   
   static void reverseQueueFirstKElements(int k)
   {
       Stack<Integer> s=new Stack<>();
       if(queue.isEmpty() || k==0)
           return;
       if(k>queue.size())
           return;
       
       for(int i=0;i<k;i++)
       {
           s.push(queue.remove());
       }
       
       while(!s.isEmpty())
           queue.add(s.pop());
       
       for(int i=0;i<k;i++)
       {
           queue.add(queue.remove());
       }
       
       while(!queue.isEmpty())
       {
           System.out.println(queue.remove());
       }
   }
    public static void main(String[] args) {
        // TODO code application logic here
        queue = new LinkedList<Integer>(); 
        queue.add(10); 
        queue.add(20); 
        queue.add(30); 
        queue.add(40); 
        queue.add(50); 
        queue.add(60); 
        queue.add(70); 
        queue.add(80); 
        queue.add(90); 
        queue.add(100); 
  
        int k = 5; 
        reverseQueueFirstKElements(k); 
        
    }