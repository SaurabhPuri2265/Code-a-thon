Given a set of time intervals in any order, 
merge all overlapping intervals into one and output the result which should have only mutually exclusive intervals. 

package mergeintervals;
import java.util.*;
/*
 * @author saurabh
 */
public class MergeIntervals {
    
    public static void Merge(Interval arr[])
    {
        Stack<Interval> s=new Stack<>();
        
        Arrays.sort(arr,new Comparator<Interval>(){
            public int compare(Interval a,Interval b)
            {
                return a.start-b.start;
            }
        });
        s.push(arr[0]);
        Interval top;
        for(int i=1;i<s.size();i++)
        {
            top=s.pop();
            if(top.end<arr[i].start)
            {
                s.push(top);
                s.push(arr[i]);
            }
            else if(top.end<arr[i].end)
            {
                top.end=arr[i].end;
                s.push(top);
            }
                
        }
        while (!s.isEmpty())  
        {  
            Interval t = s.pop();  
            System.out.print("["+t.start+","+t.end+"] "); 
        }   
    }

    public static void main(String[] args) {
       Interval arr[]=new Interval[4]; 
        arr[0]=new Interval(6,8); 
        arr[1]=new Interval(1,9); 
        arr[2]=new Interval(2,4); 
        arr[3]=new Interval(4,7); 
        Merge(arr); 
    }
    
}

class Interval 
{ 
    int start,end; 
    Interval(int start, int end) 
    { 
        this.start=start; 
        this.end=end; 
    } 
}