import java.util.*;

public class Solution{
	
	// Person with 2 is celebrity 
    static int MATRIX[][] = { { 0, 0, 1, 0 }, 
                            { 0, 0, 1, 0 }, 
                            { 0, 0, 0, 0 },  
                            { 0, 0, 1, 0 } }; 
  
    // Returns true if a knows  
    // b, false otherwise 
    
    static boolean knows(int a,int b)
    {
    	if(MATRIX[a][b]==1)
    		return true;
    	return false;
    }
	
    //To first include all celebrities in a stack and checking relation between two consecutive celebs
    
    static int findceleb(int n)
    {
    	Stack<Integer> s= new Stack<>();
    	int c1=0,c2=0;
    	for(int i=0;i<n;i++)
    		s.push(i);
    	
    	
    	while(s.size()>1)
    	{
    		  c1=s.pop();
    		  c2=s.pop();
    		 
    		
    		if(knows(c1,c2))
    			s.push(c2);
    		else
    			s.push(c1);
    	}
    	
    	// popping out last member of stack
    	
    	 c1=s.pop();
    	
    	 //Checking whether the member is celeb or not
    	 
    	for(int i=0;i<n;i++)
    		if(i!=c1 && (knows(c1,i) || !knows(i,c1)))
    			return -1;
    	
    	return c1;
    			
    }
    
    public static void main(String args[])
    		{
    			int res=findceleb(4);
    			if(res==-1)
    				System.out.println("No celeb");
    			else 
    				System.out.println(res+" is celeb");
    			
    		}
}