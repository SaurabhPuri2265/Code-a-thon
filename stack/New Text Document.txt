 Minimum Add to Make Parentheses Valid

Given a string S of '(' and ')' parentheses, we add the minimum number of parentheses ( '(' or ')', and in any positions ) so that the resulting parentheses string is valid.

Formally, a parentheses string is valid if and only if:

It is the empty string, or
It can be written as AB (A concatenated with B), where A and B are valid strings, or
It can be written as (A), where A is a valid string.

Solution-

class Solution {
       public int minAddToMakeValid(String S) {
        if(S == null || S.length() == 0) return 0;
        Stack<Character> stack = new Stack<>();
        for(char c : S.toCharArray()) {
            if (!stack.isEmpty() && stack.peek() == '(' && c == ')') stack.pop();
            else stack.push(c);
        }
        return stack.size();
    }
}