//Recursive

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        
        List<Integer> l=new ArrayList<>();
        if(root==null)
            return l;
        InOrder(root,l);
        return l;
        
    }
    
    public void InOrder(TreeNode root,List<Integer> l)
    {
        
        if(root.left!=null)
            InOrder(root.left,l);
        if(root==null)
        {
            l.add(null);
            return;
        }
        l.add(root.val);
        if(root.right!=null)
            InOrder(root.right,l);
    }
}

//Iterative

 TreeNode curr = root;
        List<Integer> l = new ArrayList<Integer>();
        Stack<TreeNode> s = new Stack<TreeNode>();
        boolean done=true;
        while (done) {
            if(curr!=null)
            {
                s.push(curr);
                curr=curr.left;
            }
            else
            {
                if(s.isEmpty())
                    done=false;
                else
                {
                    curr=s.pop();
                    if(curr==null)
                        l.add(null);
                    else
                        l.add(curr.val);
                    curr=curr.right;
                }
            }
            
        }
        return l;