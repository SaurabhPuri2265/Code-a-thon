Given a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.

class Solution {
    
    TreeNode curr=new TreeNode(0);
    
    public TreeNode increasingBST(TreeNode root) {
        
        TreeNode dummy=curr;
        
        Helper(root);
  
        return dummy.right;
        
    }
    
    public void Helper(TreeNode root)
    {
          
        if(root==null)
            return;
        
        Helper(root.left);
        curr.right=new TreeNode(root.val);
        curr=curr.right;
        Helper(root.right);
         
          
    }
}