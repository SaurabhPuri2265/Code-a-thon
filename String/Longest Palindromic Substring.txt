Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"

class Solution {
    public String longestPalindrome(String s) {
        
        int maxlen=-1;
        
        if(s.length()<=1)
            return s;
        
        int start=0;
        int end=0;
        
        int len=0;
        
        for(int i=0;i<s.length();i++)
        {
            int len1=getPalinLength(s,i,i); //for ababa types
            int len2=getPalinLength(s,i,i+1); //for abba types
            
            len=Math.max(len1,len2);
            
            if(len > end-start){
                start = i - ((len-1)/2);
                end = i + (len/2);
            }
        }
        
        return s.substring(start,end+1);
        
    }
    
    public int getPalinLength(String s,int left,int right){
        
        if(s.length()==0 || left > right)
            return 0;
        
        while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right))
        {
            left--;
            right++;
        }
        
        return right-left-1;
    }
}