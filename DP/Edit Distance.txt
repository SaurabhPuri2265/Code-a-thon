Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.

You have the following 3 operations permitted on a word:

Insert a character
Delete a character
Replace a character
Example 1:

Input: word1 = "horse", word2 = "ros"
Output: 3
Explanation: 
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')

class Solution {
    public int minDistance(String word1, String word2) {
        int res[][]=new int[word1.length()+1][word2.length()+1];
        
        for(int i=0;i<=word1.length();i++)
            for(int j=0;j<=word2.length();j++)
            {
                if(i==0 && j==0)
                    res[i][j]=0;
                else if(i==0)
                    res[i][j]=j;
                else if(j==0)
                    res[i][j]=i;
                else if(word1.charAt(i-1)==word2.charAt(j-1))
                    res[i][j]=res[i-1][j-1];
                else
                    res[i][j]=1+Math.min(res[i-1][j],Math.min(res[i][j-1],res[i-1][j-1]));
                    
            }
        return res[word1.length()][word2.length()];
    }
}