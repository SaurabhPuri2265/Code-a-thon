Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.

Example 1:

Input: 2
Output: 1
Explanation: 2 = 1 + 1, 1 × 1 = 1.
Example 2:

Input: 10
Output: 36
Explanation: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36.

------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    HashMap<Integer,Integer> map=new HashMap<>();
    public int integerBreak(int n) {
        if(n<=1)
            return 0;
        
        if(!map.containsKey(n))
        {
            int max=0;
            for(int i=1;i<n;i++)
                max=Math.max(max,Math.max(i*(n-i),integerBreak(n-i)*i));
            map.put(n,max);
        }
        
        return map.get(n);
    }
}